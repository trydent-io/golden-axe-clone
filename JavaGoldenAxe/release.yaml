release:
  # Repo in which the release will be created.
  #
  github:

    # Disables or enables publication to GitHub.
    # defaults to `true`.
    #
    enabled: true

    # Defines the connection timeout in seconds.
    # Defaults to `20`.
    #
    connectTimeout: 20

    # Defines the read timeout in seconds.
    # Defaults to `60`.
    #
    readTimeout: 60

    # The user or organization that owns the repository.
    #
    owner: duke

    # The name of the repository.
    # If unspecified, will use ${project.name}.
    #
    name: app

    # The GitHub host url.
    #
    host: github.com

    # Username used for authoring commits. Must have write access to the repository.
    # If left unspecified, the `JRELEASER_GITHUB_USERNAME`
    # environment variable must be defined.
    # Defaults to the repository's owner.
    #
    username: trydent-io

    # The GitHub API endpoint to use.
    # You can skip `/api/v1` as it will be added by default.
    #
    apiEndpoint: https://api.github.com

    # The tag associated with the release.
    # May define a `JRELEASER_TAG_NAME` environment variable instead.
    # If left unspecified, will use `v{{projectVersion}}`.
    #
    tagName: v1.0.0

    # The name of the release.
    # If left unspecified, will use `Release {{tagName}}`.
    # May define a `JRELEASER_RELEASE_NAME` environment variable instead.
    #
    releaseName: Release v1.0.0

    # Drops and creates an existing release with matching tag.
    # May define a `JRELEASER_OVERWRITE` environment variable instead.
    # Defaults to `false`.
    #
    overwrite: true

    #
    update:
      # Appends artifacts to an existing release with matching tag,
      # useful if `overwrite` is set to `false`.
      # May define a `JRELEASER_UPDATE` environment variable instead.
      # Defaults to `false`.
      #
      enabled: true

      # Release sections to be updated.
      # Valid values are [`TITLE`, `BODY`, `ASSETS`].
      # Defaults to `ASSETS`.
      #
      sections:
        - ASSETS

    # Skips creating a tag.
    # Useful when the tag was created externally.
    # May define a `JRELEASER_SKIP_TAG` environment variable instead.
    # Defaults to `false`.
    #
    skipTag: false

    # Skips creating a release.
    # Useful when release assets will be handled with an uploader.
    # May define a `JRELEASER_SKIP_RELEASE` environment variable instead.
    # Defaults to `false`.
    #
    skipRelease: false

    # Signs commits with the configured credentials.
    # The Signing section must be configured as well.
    # Defaults to `false`.
    #
    sign: false

    # The target branch to use.
    # May define a `JRELEASER_BRANCH` environment variable instead.
    # Defaults to the branch pointed by HEAD.
    #
    branch: main

    # Enables or disables asset upload.
    # Valid values are [`NEVER`, `ALWAYS`, `RELEASE`, `SNAPSHOT`, `PRERELEASE`, `RELEASE_PRERELEASE`].
    # Defaults to `ALWAYS`.
    #
    uploadAssets: ALWAYS

    # Release files.
    # Defaults to `true`.
    #
    files: true

    # Release distribution artifacts.
    # Defaults to `true`.
    #
    artifacts: true

    # Release checksum files.
    # Defaults to `true`.
    #
    checksums: true

    # Release signature files.
    # Defaults to `true`.
    #
    signatures: true

    # Marks the release as a draft.
    # May define a `JRELEASER_DRAFT` environment variable instead.
    # Defaults to `false`.
    #
    draft: false

    # Links the release with a discussion.
    # The named category must exist.
    # Defaults to empty.
    #
    discussionCategoryName: Announcements

    # Git author used to commit to the repository.
    #
    commitAuthor:
      # Name used when authoring commits.
      # Defaults to `jreleaserbot`.
      #
      name: lucaguada

      # E-mail used when authoring commits.
      # Defaults to `jreleaser@kordamp.org`.
      #
      email: luca.guadagnini@gmail.com

    # Changelog customization.
    #
    changelog:
      # Disables or enables the changelog.
      # defaults to `true`.
      #
      enabled: true

      # Sorts commits in ascending (oldest first) or descending (newer first).
      # Valid values are: `ASC`, `DESC`.
      # Defaults to `DESC`.
      #
      sort: DESC

      # Path to an external file that contains the changelog, read as is.
      # May be a relative path to the configuration file or an absolute path.
      # If unspecified, JReleaser will automatically calculate the changelog.
      #
      # external: path/to/changelog.md

      # Create explicit markdown links for commit hashes.
      # Defaults to `false`.
      #
      links: false

      # Enables or disables formatting options.
      # Valid values are [`NEVER`, `ALWAYS`, `RELEASE`, `SNAPSHOT`].
      # Defaults to `NEVER`.
      #
      formatted: ALWAYS

      # Preconfigured changelog options.
      # Valid values are [`gitmoji`, `conventional-commits`].
      # Requires `formatted` to be enabled.
      # Defaults to empty.
      #
      preset: 'gitmoji'

      # The template to use for each change.
      # Defaults to `- {{commitShortHash}} {{commitTitle}} ({{commitAuthor}})`.
      #
      format: '- {{commitShortHash}} {{commitTitle}}'

      # The template to use for the whole changelog.
      # Defaults is shown.
      #
      content: |
        # Changelog

        {{changelogChanges}}
        {{changelogContributors}}

      # Path to a template file that defines the contents.
      # Review the available Name Templates.
      # Defaults to `src/jreleaser/templates/changelog.tpl`.
      #
      contentTemplate: path/to/template/changelog.tpl

      #
      contributors:
        # Enables the contributors block.
        # Defaults to `true`.
        #
        enabled: true

        # The template to use for each contributor.
        # Defaults to `{{contributorName}}`.
        #
        format: '- {{contributorName}} ({{contributorUsernameAsLink}})'

      #
      hide:
        # Hide uncategorized commits.
        # Defaults to `false`.
        #
        uncategorized: true

        # Hide matching categories.
        # Entries must exactly match category keys defined below.
        # Defaults to empty.
        #
        categories:
          - 'merge'

        # Hide matching contributor names.
        # Value may be plain text or regex.
        # Defaults to empty.
        #
        contributors:
          - '[bot]'

      # A list of labels to be included.
      # Only changes matching this list will be included.
      # Defaults to empty.
      #
      #includeLabels:
      #  - 'issue'

      # A list of labels to be excluded.
      # Changes matching this list will be excluded.
      # Defaults to empty.
      #
      #excludeLabels:
      #  - 'issue'

      # Defines rules that apply labels to changes.
      # Matchers are evaluated independently; the label will
      # be set if at least one of the matchers meets the criteria.
      #
      #labelers:
        # The label to be applied.
        #
        #- label: 'issue'

          # Matches the text of the first commit line.
          # Value may be plain text or regex.
          # Use `regex:` as prefix to indicate a regex.
          #
          #title: 'regex:fix:'

          # Matches the full text of the commit.
          # Value may be plain text or regex.
          # Use `regex:` as prefix to indicate a regex.
          #
          #body: 'Fixes #'

          # Priority when sorting.
          # Defaults to `null`
          #
          #order: 1

      # Groups changes by category.
      # Defaults are shown.
      #
      categories:
        # Used for rendering
        - title: 'üöÄ Features'
          # Used for identifying the category
          key: 'features'
          labels:
            - 'feature'
            - 'enhancement'
          order: 1
        - title: 'üêõ Bug Fixes'
          key: 'fixes'
          # You may override the format per category.
          format: '- {{commitShortHash}} {{commitBody}}'
          labels:
            - 'bug'
            - 'fix'
          order: 2

    # A milestone associated with the release
    #
    milestone:
      # Close the milestone (if it exists and still open) upon release.
      # Defaults to `true`.
      #
      close: true

      # The name/title of the milestone.
      # May define a `JRELEASER_MILESTONE_NAME` environment variable instead.
      # Defaults to `{{tagName}}`.
      #
      name: '{{tagName}}'

    # The following properties define  URL formats.
    # Defaults are shown.
    # Review the available Name Templates.

    #
    repoUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}

    #
    repoCloneUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}.git

    #
    commitUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/commits

    #
    srcUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/blob/{{repoBranch}}

    #
    downloadUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/download/{{tagName}}/{{artifactFile}}

    #
    releaseNotesUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/tag/{{tagName}}

    #
    latestReleaseUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/latest

    #
    issueTrackerUrl: https://{{repoHost}}/{{repoOwner}}/{{repoName}}/issues
